{"ast":null,"code":"var _jsxFileName = \"/Users/charlesbuckley/coding/trivia-game/src/components/QuestionsModal/QuestionsModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Style from \"./Questions.module.css\";\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsModal = () => {\n  _s();\n  const [counter, setCounter] = useState(1);\n  const [isCorrectAnswer, setIsCorrectAnswer] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const questions = [{\n    questionTitle: \"What is the tallest mountain in the world?\",\n    options: [{\n      id: 1,\n      title: \"K2\",\n      isCorrect: false\n    }, {\n      id: 2,\n      title: \"Mt. Everest\",\n      isCorrect: true\n    }, {\n      id: 3,\n      title: \"Kangchenjunga\",\n      isCorrect: false\n    }, {\n      id: 4,\n      title: \"Pilot Butte\",\n      isCorrect: false\n    }]\n  }, {\n    questionTitle: \"What is the longest river in the world?\",\n    options: [{\n      id: 1,\n      title: \"Amazon\",\n      isCorrect: true\n    }, {\n      id: 2,\n      title: \"Nile\",\n      isCorrect: false\n    }, {\n      id: 3,\n      title: \"James\",\n      isCorrect: false\n    }, {\n      id: 4,\n      title: \"Mississippi\",\n      isCorrect: false\n    }]\n  }];\n  useEffect(() => {\n    console.log('first question', questions[0]);\n  }, []);\n  const handleAnswer = e => {\n    console.log('test', e);\n    if (e === true) {\n      setCounter(counter + 1);\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.modal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.modal_inner,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: Style.modal__inner__title,\n        children: [\"Question \", counter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: Style.modal__inner__subtitle,\n        children: [\" \", currentQuestion + 1, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: Style.modal__inner__subtitle,\n        children: questions[currentQuestion].questionTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.modal__inner__btn_container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.modal__inner__btn_container,\n          children: questions[currentQuestion].options.map((_option, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.modal__inner__btn_container__item,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: isCorrectAnswer ? \"primary\" : \"secondary\",\n                \"data-value\": \"\",\n                onClick: () => handleAnswer(_option.isCorrect),\n                children: _option.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this)\n            }, _option.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionsModal, \"T6i+SBipq2jA4hCIFQWQULJzYCs=\");\n_c = QuestionsModal;\nexport default QuestionsModal;\nvar _c;\n$RefreshReg$(_c, \"QuestionsModal\");","map":{"version":3,"names":["React","useEffect","useState","Style","Button","QuestionsModal","counter","setCounter","isCorrectAnswer","setIsCorrectAnswer","currentQuestion","setCurrentQuestion","questions","questionTitle","options","id","title","isCorrect","console","log","handleAnswer","e","modal","modal_inner","modal__inner__title","modal__inner__subtitle","length","modal__inner__btn_container","map","_option","i","modal__inner__btn_container__item"],"sources":["/Users/charlesbuckley/coding/trivia-game/src/components/QuestionsModal/QuestionsModal.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Style from \"./Questions.module.css\";\nimport { Button } from '@mui/material';\n\nconst QuestionsModal = () => {\n    const [counter, setCounter] = useState(1)\n    const [isCorrectAnswer, setIsCorrectAnswer] = useState(false);\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n\n    const questions = [\n        {\n            questionTitle: \"What is the tallest mountain in the world?\",\n            options : [\n                {id: 1, title: \"K2\", isCorrect: false},\n                {id: 2, title: \"Mt. Everest\", isCorrect: true},\n                {id: 3, title: \"Kangchenjunga\", isCorrect: false},\n                {id: 4, title: \"Pilot Butte\", isCorrect: false},\n            ],\n        },\n        {\n            questionTitle: \"What is the longest river in the world?\",\n            options : [\n                {id: 1, title: \"Amazon\", isCorrect: true},\n                {id: 2, title: \"Nile\", isCorrect: false},\n                {id: 3, title: \"James\", isCorrect: false},\n                {id: 4, title: \"Mississippi\", isCorrect: false},\n            ],\n        },\n    ];\n\n    useEffect(() => {\n      console.log('first question', questions[0]);\n    }, []);\n    \n\n    const handleAnswer = (e:any) => {\n        console.log('test', e);\n        if (e === true) {\n            setCounter(counter + 1);\n            setCurrentQuestion(currentQuestion + 1);\n        }\n    }\n\n    return (\n        <div className={Style.modal}>\n            <div className={Style.modal_inner}>\n                <h3 className={Style.modal__inner__title}>Question {counter}</h3>\n                <h5 className={Style.modal__inner__subtitle}> {currentQuestion + 1} out of {questions.length}</h5>\n                <h4 className={Style.modal__inner__subtitle}>{questions[currentQuestion].questionTitle}</h4>\n                <div className={Style.modal__inner__btn_container}>\n                    <div className={Style.modal__inner__btn_container}>\n                        {questions[currentQuestion].options.map((_option, i) => {\n                            return (\n                                <div key={_option.id} className={Style.modal__inner__btn_container__item}>\n                                    <Button\n                                        variant=\"outlined\"\n                                        color={isCorrectAnswer ? \"primary\" : \"secondary\"}\n                                        data-value=''\n                                        onClick={() => handleAnswer(_option.isCorrect)}\n                                    >\n                                        {_option.title}\n                                    </Button>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n                \n            \n            </div>\n        </div>\n    )\n}\n\nexport default QuestionsModal"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}