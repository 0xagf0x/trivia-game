{"ast":null,"code":"var _jsxFileName = \"/Users/charlesbuckley/coding/trivia-game/src/components/QuestionsModal/QuestionsModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Style from \"./Questions.module.css\";\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionsModal = () => {\n  _s();\n  const [counter, setCounter] = useState(1);\n  const [isCorrectAnswer, setIsCorrectAnswer] = useState(false);\n  const [question1, setQuestion1] = useState(true);\n  const [question2, setQuestion2] = useState(false);\n  const [question3, setQuestion3] = useState(false);\n  const [question4, setQuestion4] = useState(false);\n  const [question5, setQuestion5] = useState(false);\n  const [question6, setQuestion6] = useState(false);\n  const [question7, setQuestion7] = useState(false);\n  const [question8, setQuestion8] = useState(false);\n  const [question9, setQuestion9] = useState(false);\n  const [question10, setQuestion0] = useState(false);\n  const questions = [{\n    questionTitle: \"What is the tallest mountain in the world?\",\n    answers: [{\n      title: \"K2\"\n    }, {\n      title: \"Mt. Everest\"\n    }, {\n      title: \"Kangchenjunga\"\n    }, {\n      title: \"Pilot Butte\"\n    }],\n    correctAnswer: {\n      answer: \"Mt. Everest\"\n    }\n  }, {\n    questionTitle: \"What is the longest river in the world?\",\n    answers: [{\n      title: \"Amazon\"\n    }, {\n      title: \"Nile\"\n    }, {\n      title: \"James\"\n    }, {\n      title: \"Mississippi\"\n    }],\n    correctAnswer: {\n      answer: \"Amazon\"\n    }\n  }];\n  useEffect(() => {\n    console.log(questions[0]);\n  }, []);\n  const handleAnswer = _e => {\n    console.log('first question', questions[0]);\n    console.log(\"e\", _e);\n    console.log('_e.title', _e.title);\n    console.log('correct answer:', _e.correctAnswer.answer);\n    if (_e.title === _e.correctAnswer.answer) {\n      console.log('correct');\n      setCounter(counter + 1);\n    } else {\n      console.log('wrong');\n      setIsCorrectAnswer(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.modal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.modal_inner,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: Style.modal__inner__title,\n        children: [\"Question \", counter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), question1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: Style.modal__inner__subtitle,\n          children: questions[0].questionTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.modal__inner__btn_container,\n          children: questions[0].answers.map((_e, _i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.modal__inner__btn_container,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.modal__inner__btn_container__item,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: isCorrectAnswer ? \"primary\" : \"secondary\",\n                \"data-value\": _e.title,\n                onClick: () => handleAnswer(_e),\n                children: _e.title\n              }, _i + 1, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)\n          }, _i + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionsModal, \"3kBS52BxfEFzxF+92VyNVrn2qsE=\");\n_c = QuestionsModal;\nexport default QuestionsModal;\nvar _c;\n$RefreshReg$(_c, \"QuestionsModal\");","map":{"version":3,"names":["React","useEffect","useState","Style","Button","QuestionsModal","counter","setCounter","isCorrectAnswer","setIsCorrectAnswer","question1","setQuestion1","question2","setQuestion2","question3","setQuestion3","question4","setQuestion4","question5","setQuestion5","question6","setQuestion6","question7","setQuestion7","question8","setQuestion8","question9","setQuestion9","question10","setQuestion0","questions","questionTitle","answers","title","correctAnswer","answer","console","log","handleAnswer","_e","modal","modal_inner","modal__inner__title","modal__inner__subtitle","modal__inner__btn_container","map","_i","modal__inner__btn_container__item"],"sources":["/Users/charlesbuckley/coding/trivia-game/src/components/QuestionsModal/QuestionsModal.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Style from \"./Questions.module.css\";\nimport { Button } from '@mui/material';\n\nconst QuestionsModal = () => {\n    const [counter, setCounter] = useState(1)\n    const [isCorrectAnswer, setIsCorrectAnswer] = useState(false);\n    const [question1, setQuestion1] = useState(true);\n    const [question2, setQuestion2] = useState(false);\n    const [question3, setQuestion3] = useState(false);\n    const [question4, setQuestion4] = useState(false);\n    const [question5, setQuestion5] = useState(false);\n    const [question6, setQuestion6] = useState(false);\n    const [question7, setQuestion7] = useState(false);\n    const [question8, setQuestion8] = useState(false);\n    const [question9, setQuestion9] = useState(false);\n    const [question10, setQuestion0] = useState(false);\n\n    const questions = [\n    {\n        questionTitle: \"What is the tallest mountain in the world?\",\n        answers : [\n            {title: \"K2\"},\n            {title: \"Mt. Everest\"},\n            {title: \"Kangchenjunga\"},\n            {title: \"Pilot Butte\"},\n        ],\n        correctAnswer: {\n            answer: \"Mt. Everest\"\n        }\n    },\n    {\n        questionTitle: \"What is the longest river in the world?\",\n        answers : [\n            {title: \"Amazon\"},\n            {title: \"Nile\"},\n            {title: \"James\"},\n            {title: \"Mississippi\"},\n        ],\n        correctAnswer: {\n            answer: \"Amazon\"\n        }\n    },\n   \n    ];\n\n    useEffect(() => {\n      console.log(questions[0]);\n    }, [])\n    \n\n    const handleAnswer = (_e:any) => {\n        console.log('first question', questions[0])\n        console.log(\"e\", _e);\n        console.log('_e.title', _e.title);\n        console.log('correct answer:', _e.correctAnswer.answer);\n        if (_e.title === _e.correctAnswer.answer) {\n            console.log('correct')\n            setCounter(counter + 1)\n        } else {\n            console.log('wrong')\n            setIsCorrectAnswer(false);\n        }\n    }\n\n    return (\n        <div className={Style.modal}>\n            <div className={Style.modal_inner}>\n                <h3 className={Style.modal__inner__title}>Question {counter}</h3>\n                {question1\n                ? \n                <>\n                    <h4 className={Style.modal__inner__subtitle}>{questions[0].questionTitle}</h4>\n                    <div className={Style.modal__inner__btn_container}>\n                        {questions[0].answers.map((_e, _i) => (\n                            <div key={_i + 1} className={Style.modal__inner__btn_container}>\n                                <div className={Style.modal__inner__btn_container__item}>\n                                     <Button\n                                        key={_i + 1}\n                                        variant=\"outlined\"\n                                        color={isCorrectAnswer ? \"primary\" : \"secondary\"}\n                                        data-value={_e.title}\n                                        onClick={() => handleAnswer(_e)}\n                                    >\n                                        {_e.title}\n                                    </Button>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </>\n                : null}\n            </div>\n        </div>\n    )\n}\n\nexport default QuestionsModal"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}