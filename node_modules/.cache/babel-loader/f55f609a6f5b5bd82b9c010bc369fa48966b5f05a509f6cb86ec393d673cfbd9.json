{"ast":null,"code":"var _jsxFileName = \"/Users/charlesbuckley/coding/trivia-game/src/components/QuestionsModal/QuestionsModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Style from \"./Questions.module.css\";\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionsModal = () => {\n  _s();\n  const [counter, setCounter] = useState(1);\n  const [score, setScore] = useState(0);\n  const [isCorrectAnswer, setIsCorrectAnswer] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showFinalResults, setShowFinalResults] = useState(false);\n  const questions = [{\n    questionTitle: \"What is the tallest mountain in the world?\",\n    options: [{\n      id: 1,\n      title: \"K2\",\n      isCorrect: false\n    }, {\n      id: 2,\n      title: \"Mt. Everest\",\n      isCorrect: true\n    }, {\n      id: 3,\n      title: \"Kangchenjunga\",\n      isCorrect: false\n    }, {\n      id: 4,\n      title: \"Pilot Butte\",\n      isCorrect: false\n    }]\n  }, {\n    questionTitle: \"What is the longest river in the world?\",\n    options: [{\n      id: 1,\n      title: \"Amazon\",\n      isCorrect: true\n    }, {\n      id: 2,\n      title: \"Nile\",\n      isCorrect: false\n    }, {\n      id: 3,\n      title: \"James\",\n      isCorrect: false\n    }, {\n      id: 4,\n      title: \"Mississippi\",\n      isCorrect: false\n    }]\n  }];\n  const handleAnswer = e => {\n    console.log('test', e);\n    if (e === true) {\n      setCounter(counter + 1);\n      setScore(score + 1);\n    } else {\n      console.log('wrong');\n    }\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setShowFinalResults(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.modal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.modal_inner,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: Style.modal__inner__title,\n        children: [\"Question \", counter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: Style.modal__inner__subtitle,\n        children: [\" \", currentQuestion + 1, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: Style.modal__inner__subtitle,\n        children: questions[currentQuestion].questionTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.modal__inner__btn_container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.modal__inner__btn_container,\n          children: showFinalResults ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Quiz Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: isCorrectAnswer ? \"primary\" : \"secondary\",\n              \"data-value\": \"\",\n              onClick: () => handleAnswer(_option.isCorrect),\n              children: \"Restart Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: questions[currentQuestion].options.map((_option, i) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: Style.modal__inner__btn_container__item,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isCorrectAnswer ? \"primary\" : \"secondary\",\n                  \"data-value\": \"\",\n                  onClick: () => handleAnswer(_option.isCorrect),\n                  children: _option.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this)\n              }, _option.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionsModal, \"E/gGlwGM6YMm34Zy//S0fHdX+B8=\");\n_c = QuestionsModal;\nexport default QuestionsModal;\nvar _c;\n$RefreshReg$(_c, \"QuestionsModal\");","map":{"version":3,"names":["React","useState","Style","Button","QuestionsModal","counter","setCounter","score","setScore","isCorrectAnswer","setIsCorrectAnswer","currentQuestion","setCurrentQuestion","showFinalResults","setShowFinalResults","questions","questionTitle","options","id","title","isCorrect","handleAnswer","e","console","log","length","modal","modal_inner","modal__inner__title","modal__inner__subtitle","modal__inner__btn_container","_option","map","i","modal__inner__btn_container__item"],"sources":["/Users/charlesbuckley/coding/trivia-game/src/components/QuestionsModal/QuestionsModal.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Style from \"./Questions.module.css\";\nimport { Button } from '@mui/material';\n\nconst QuestionsModal = () => {\n    const [counter, setCounter] = useState(1)\n    const [score, setScore] = useState(0);\n    const [isCorrectAnswer, setIsCorrectAnswer] = useState(false);\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [showFinalResults, setShowFinalResults] = useState(false);\n\n    const questions = [\n        {\n            questionTitle: \"What is the tallest mountain in the world?\",\n            options : [\n                {id: 1, title: \"K2\", isCorrect: false},\n                {id: 2, title: \"Mt. Everest\", isCorrect: true},\n                {id: 3, title: \"Kangchenjunga\", isCorrect: false},\n                {id: 4, title: \"Pilot Butte\", isCorrect: false},\n            ],\n        },\n        {\n            questionTitle: \"What is the longest river in the world?\",\n            options : [\n                {id: 1, title: \"Amazon\", isCorrect: true},\n                {id: 2, title: \"Nile\", isCorrect: false},\n                {id: 3, title: \"James\", isCorrect: false},\n                {id: 4, title: \"Mississippi\", isCorrect: false},\n            ],\n        },\n    ];\n    \n    const handleAnswer = (e:any) => {\n        console.log('test', e);\n        if (e === true) {\n            setCounter(counter + 1);\n            setScore(score + 1);\n        } else {\n            console.log('wrong')\n        }\n\n        if (currentQuestion + 1 < questions.length ) {\n            setCurrentQuestion(currentQuestion + 1);\n        } else {\n            setShowFinalResults(true);\n        }\n    }\n\n    return (\n        <div className={Style.modal}>\n            <div className={Style.modal_inner}>\n                <h3 className={Style.modal__inner__title}>Question {counter}</h3>\n                <h5 className={Style.modal__inner__subtitle}> {currentQuestion + 1} out of {questions.length}</h5>\n                <h4 className={Style.modal__inner__subtitle}>{questions[currentQuestion].questionTitle}</h4>\n                <div className={Style.modal__inner__btn_container}>\n                    <div className={Style.modal__inner__btn_container}>\n                        \n\n                        {showFinalResults \n                        ? \n                        <>\n                            <h1>Quiz Results</h1>\n                            <h5></h5>\n                            <Button\n                                variant=\"outlined\"\n                                color={isCorrectAnswer ? \"primary\" : \"secondary\"}\n                                data-value=''\n                                onClick={() => handleAnswer(_option.isCorrect)}\n                            >\n                                Restart Game\n                            </Button>\n                        </>\n                        : \n                        <>\n                            {questions[currentQuestion].options.map((_option, i) => {\n                                return (\n                                    <div key={_option.id} className={Style.modal__inner__btn_container__item}>\n                                        <Button\n                                            variant=\"outlined\"\n                                            color={isCorrectAnswer ? \"primary\" : \"secondary\"}\n                                            data-value=''\n                                            onClick={() => handleAnswer(_option.isCorrect)}\n                                        >\n                                            {_option.title}\n                                        </Button>\n                                    </div>\n                                )\n                            })}\n                        </>\n                        }\n                    </div>\n                </div>\n                \n            \n            </div>\n        </div>\n    )\n}\n\nexport default QuestionsModal"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}