{"ast":null,"code":"var _jsxFileName = \"/Users/charlesbuckley/coding/trivia-game/src/components/QuestionsModal/QuestionsModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Style from \"./Questions.module.css\";\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionsModal = () => {\n  _s();\n  const [counter, setCounter] = useState(1);\n  const [isCorrectAnswer, setIsCorrectAnswer] = useState(false);\n  const [question1, setQuestion1] = useState(true);\n  const [question2, setQuestion2] = useState(false);\n  const [question3, setQuestion3] = useState(false);\n  const [question4, setQuestion4] = useState(false);\n  const [question5, setQuestion5] = useState(false);\n  const [question6, setQuestion6] = useState(false);\n  const [question7, setQuestion7] = useState(false);\n  const [question8, setQuestion8] = useState(false);\n  const [question9, setQuestion9] = useState(false);\n  const [question10, setQuestion0] = useState(false);\n  const questions = [{\n    questionTitle: \"What is the tallest mountain in the world?\",\n    options: [{\n      title: \"K2\",\n      isCorrect: false\n    }, {\n      title: \"Mt. Everest\",\n      isCorrect: true\n    }, {\n      title: \"Kangchenjunga\",\n      isCorrect: false\n    }, {\n      title: \"Pilot Butte\",\n      isCorrect: false\n    }]\n  }, {\n    questionTitle: \"What is the longest river in the world?\",\n    options: [{\n      title: \"Amazon\",\n      isCorrect: true\n    }, {\n      title: \"Nile\",\n      isCorrect: false\n    }, {\n      title: \"James\",\n      isCorrect: false\n    }, {\n      title: \"Mississippi\",\n      isCorrect: false\n    }]\n  }];\n  useEffect(() => {\n    console.log('first question', questions[0]);\n  }, []);\n  const handleAnswer = _e => {\n    console.log('first question', _e);\n    console.log(\"e\", _e);\n    console.log('element title', _e.title);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.modal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.modal_inner,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: Style.modal__inner__title,\n        children: [\"Question \", counter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), questions.map((_question, _i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: question1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: Style.modal__inner__subtitle,\n            children: questions[0].questionTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.modal__inner__btn_container,\n            children: _question.answers.map((_e, _i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.modal__inner__btn_container,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: Style.modal__inner__btn_container__item,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isCorrectAnswer ? \"primary\" : \"secondary\",\n                  \"data-value\": _e.title,\n                  onClick: () => handleAnswer(_e),\n                  children: _e.title\n                }, _i + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this)\n            }, _i + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : null\n      }, void 0, false))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionsModal, \"3kBS52BxfEFzxF+92VyNVrn2qsE=\");\n_c = QuestionsModal;\nexport default QuestionsModal;\nvar _c;\n$RefreshReg$(_c, \"QuestionsModal\");","map":{"version":3,"names":["React","useEffect","useState","Style","Button","QuestionsModal","counter","setCounter","isCorrectAnswer","setIsCorrectAnswer","question1","setQuestion1","question2","setQuestion2","question3","setQuestion3","question4","setQuestion4","question5","setQuestion5","question6","setQuestion6","question7","setQuestion7","question8","setQuestion8","question9","setQuestion9","question10","setQuestion0","questions","questionTitle","options","title","isCorrect","console","log","handleAnswer","_e","modal","modal_inner","modal__inner__title","map","_question","_i","modal__inner__subtitle","modal__inner__btn_container","answers","modal__inner__btn_container__item"],"sources":["/Users/charlesbuckley/coding/trivia-game/src/components/QuestionsModal/QuestionsModal.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Style from \"./Questions.module.css\";\nimport { Button } from '@mui/material';\n\nconst QuestionsModal = () => {\n    const [counter, setCounter] = useState(1)\n    const [isCorrectAnswer, setIsCorrectAnswer] = useState(false);\n    const [question1, setQuestion1] = useState(true);\n    const [question2, setQuestion2] = useState(false);\n    const [question3, setQuestion3] = useState(false);\n    const [question4, setQuestion4] = useState(false);\n    const [question5, setQuestion5] = useState(false);\n    const [question6, setQuestion6] = useState(false);\n    const [question7, setQuestion7] = useState(false);\n    const [question8, setQuestion8] = useState(false);\n    const [question9, setQuestion9] = useState(false);\n    const [question10, setQuestion0] = useState(false);\n\n    const questions = [\n        {\n            questionTitle: \"What is the tallest mountain in the world?\",\n            options : [\n                {title: \"K2\", isCorrect: false},\n                {title: \"Mt. Everest\", isCorrect: true},\n                {title: \"Kangchenjunga\", isCorrect: false},\n                {title: \"Pilot Butte\", isCorrect: false},\n            ],\n        },\n        {\n            questionTitle: \"What is the longest river in the world?\",\n            options : [\n                {title: \"Amazon\", isCorrect: true},\n                {title: \"Nile\", isCorrect: false},\n                {title: \"James\", isCorrect: false},\n                {title: \"Mississippi\", isCorrect: false},\n            ],\n        },\n    ];\n\n    useEffect(() => {\n      console.log('first question', questions[0]);\n    }, [])\n    \n\n    const handleAnswer = (_e:any) => {\n        console.log('first question', _e)\n        console.log(\"e\", _e);\n        console.log('element title', _e.title);\n    }\n\n    return (\n        <div className={Style.modal}>\n            <div className={Style.modal_inner}>\n                <h3 className={Style.modal__inner__title}>Question {counter}</h3>\n                 {questions.map((_question, _i) => (\n                    <>\n                        {question1\n                        ? \n                        <>\n                            <h4 className={Style.modal__inner__subtitle}>{questions[0].questionTitle}</h4>\n                            <div className={Style.modal__inner__btn_container}>\n                                {_question.answers.map((_e, _i) => (\n                                    <div key={_i + 1} className={Style.modal__inner__btn_container}>\n                                        <div className={Style.modal__inner__btn_container__item}>\n                                            <Button\n                                                key={_i + 1}\n                                                variant=\"outlined\"\n                                                color={isCorrectAnswer ? \"primary\" : \"secondary\"}\n                                                data-value={_e.title}\n                                                onClick={() => handleAnswer(_e)}\n                                            >\n                                                {_e.title}\n                                            </Button>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </>\n                        : null}\n                    </>\n                 ))}\n            \n            </div>\n        </div>\n    )\n}\n\nexport default QuestionsModal"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,SAASC,MAAM,QAAQ,eAAe;AAAC;AAAA;AAEvC,MAAMC,cAAc,GAAG,MAAM;EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0B,UAAU,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAElD,MAAM4B,SAAS,GAAG,CACd;IACIC,aAAa,EAAE,4CAA4C;IAC3DC,OAAO,EAAG,CACN;MAACC,KAAK,EAAE,IAAI;MAAEC,SAAS,EAAE;IAAK,CAAC,EAC/B;MAACD,KAAK,EAAE,aAAa;MAAEC,SAAS,EAAE;IAAI,CAAC,EACvC;MAACD,KAAK,EAAE,eAAe;MAAEC,SAAS,EAAE;IAAK,CAAC,EAC1C;MAACD,KAAK,EAAE,aAAa;MAAEC,SAAS,EAAE;IAAK,CAAC;EAEhD,CAAC,EACD;IACIH,aAAa,EAAE,yCAAyC;IACxDC,OAAO,EAAG,CACN;MAACC,KAAK,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAI,CAAC,EAClC;MAACD,KAAK,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAK,CAAC,EACjC;MAACD,KAAK,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAK,CAAC,EAClC;MAACD,KAAK,EAAE,aAAa;MAAEC,SAAS,EAAE;IAAK,CAAC;EAEhD,CAAC,CACJ;EAEDjC,SAAS,CAAC,MAAM;IACdkC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,SAAS,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMO,YAAY,GAAIC,EAAM,IAAK;IAC7BH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEE,EAAE,CAAC;IACjCH,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEE,EAAE,CAAC;IACpBH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEE,EAAE,CAACL,KAAK,CAAC;EAC1C,CAAC;EAED,oBACI;IAAK,SAAS,EAAE9B,KAAK,CAACoC,KAAM;IAAA,uBACxB;MAAK,SAAS,EAAEpC,KAAK,CAACqC,WAAY;MAAA,wBAC9B;QAAI,SAAS,EAAErC,KAAK,CAACsC,mBAAoB;QAAA,wBAAWnC,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,EAC/DwB,SAAS,CAACY,GAAG,CAAC,CAACC,SAAS,EAAEC,EAAE,kBAC1B;QAAA,UACKlC,SAAS,gBAEV;UAAA,wBACI;YAAI,SAAS,EAAEP,KAAK,CAAC0C,sBAAuB;YAAA,UAAEf,SAAS,CAAC,CAAC,CAAC,CAACC;UAAa;YAAA;YAAA;YAAA;UAAA,QAAM,eAC9E;YAAK,SAAS,EAAE5B,KAAK,CAAC2C,2BAA4B;YAAA,UAC7CH,SAAS,CAACI,OAAO,CAACL,GAAG,CAAC,CAACJ,EAAE,EAAEM,EAAE,kBAC1B;cAAkB,SAAS,EAAEzC,KAAK,CAAC2C,2BAA4B;cAAA,uBAC3D;gBAAK,SAAS,EAAE3C,KAAK,CAAC6C,iCAAkC;gBAAA,uBACpD,QAAC,MAAM;kBAEH,OAAO,EAAC,UAAU;kBAClB,KAAK,EAAExC,eAAe,GAAG,SAAS,GAAG,WAAY;kBACjD,cAAY8B,EAAE,CAACL,KAAM;kBACrB,OAAO,EAAE,MAAMI,YAAY,CAACC,EAAE,CAAE;kBAAA,UAE/BA,EAAE,CAACL;gBAAK,GANJW,EAAE,GAAG,CAAC;kBAAA;kBAAA;kBAAA;gBAAA;cAON;gBAAA;gBAAA;gBAAA;cAAA;YACP,GAXAA,EAAE,GAAG,CAAC;cAAA;cAAA;cAAA;YAAA,QAanB;UAAC;YAAA;YAAA;YAAA;UAAA,QACA;QAAA,gBACP,GACD;MAAI,iBAEZ,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EAED;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GAjFKvC,cAAc;AAAA,KAAdA,cAAc;AAmFpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}